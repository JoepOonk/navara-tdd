name: Python CI

on:
  push:
    branches: [ "master" ]
    paths:
      - '.github/workflows/python.yml'
      - 'kata-solutions/stack-kata/stack-kata-python/**'  
      - 'kata-solutions/vending-machine/vending-machine-python/**'
      - 'kata-solutions/bugs-zero-kata/bugs-zero-python/**'
      - 'kata-solutions/cache-kata/cache-kata-python/**'
      - 'kata-solutions/video-store-kata/video-store-python/**'
  pull_request:
    branches: [ "master" ]

jobs:
  kata-solution-tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ['3.11']
    
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.node-version }}
      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      # #----------------------------------------------
      # #       load cached venv if cache exists
      # #----------------------------------------------
      # - name: Load cached venv
      #   id: cached-poetry-dependencies
      #   uses: actions/cache@v3
      #   with:
      #     path: .venv
      #     key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      # #----------------------------------------------
      # # install dependencies if cache does not exist
      # #----------------------------------------------
      # - name: Install dependencies
      #   working-directory: kata-solutions/stack-kata/stack-kata-python
      #   if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      #   run: poetry install --no-interaction --no-root
      #----------------------------------------------
      # install your root project, if required
      #----------------------------------------------
      - name: Stack kata install dependencies
        working-directory: kata-solutions/stack-kata/stack-kata-python
        run: poetry install --no-interaction
      - name: Stack kata run tests
        working-directory: kata-solutions/stack-kata/stack-kata-python
        run: ./run_tests.sh

      - name: Vending machine kata install dependencies
        working-directory: kata-solutions/vending-machine/vending-machine-python
        run: poetry install --no-interaction
      - name: Vending machine kata run tests
        working-directory: kata-solutions/vending-machine/vending-machine-python
        run: ./run_tests.sh

      - name: Bugs zero kata install dependencies
        working-directory: kata-solutions/bugs-zero-kata/bugs-zero-python
        run: poetry install --no-interaction
      - name: Bugs zero kata run tests
        working-directory: kata-solutions/bugs-zero-kata/bugs-zero-python
        run: ./run_tests.sh
     
      - name: Cache kata install dependencies
        working-directory: kata-solutions/cache-kata/cache-kata-python
        run: poetry install --no-interaction
      - name: Cache kata run tests
        working-directory: kata-solutions/cache-kata/cache-kata-python
        run: poetry run pytest 
     
      - name: Video store kata install dependencies
        working-directory: kata-solutions/video-store-kata/video-store-python
        run: poetry install --no-interaction
      - name: Video store kata run tests
        working-directory: kata-solutions/video-store-kata/video-store-python
        run: ./run_tests.sh
