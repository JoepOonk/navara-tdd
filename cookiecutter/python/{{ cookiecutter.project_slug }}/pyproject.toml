[tool.poetry]
name = "{{ cookiecutter.kata }}"
version = "0.1.0"
description = "{{ cookiecutter.project_short_description }}"
authors = ["{{ cookiecutter.author }}  <{{ cookiecutter.email}}>"]

[tool.poetry.dependencies]
python = ">=3.10.0,<3.13"
{% if cookiecutter.rspec_syntax == "n" %}
pytest-watch = "^4.2.0"
pytest = "^8.3.4"
pyhamcrest = "^2.1.0"
{% if cookiecutter.code_coverage == "y" %}pytest-cov = "^4.1.0"{% endif %}
{% endif %}
{% if cookiecutter.rspec_syntax == "y" %}
mamba = "^0.11.2"
expects = "^0.9.0"
{% if cookiecutter.code_coverage == "y" %}coverage = "^7.3.2"{% endif %}
{% endif %}

{% if cookiecutter.code_coverage == "y" %}
[tool.coverage.run]
branch = true
omit = [ "test/*" , "*/__init__.py"]   

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
    ]
{% endif %}

[tool.poetry.dev-dependencies]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
